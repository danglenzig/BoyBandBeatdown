[gd_scene load_steps=24 format=3 uid="uid://c0etkvben6vtp"]

[ext_resource type="Script" path="res://ui/tutorial_sequence/tutorial_sequence_deck.gd" id="1_vkuta"]
[ext_resource type="FontFile" uid="uid://dwswy8wy1p2tm" path="res://fonts/VIPNAGORGIALLA BD.OTF" id="2_2itq6"]
[ext_resource type="Texture2D" uid="uid://cppecdseuwynr" path="res://encounters/encounter_backgrounds/00.png" id="2_j0hih"]
[ext_resource type="FontFile" uid="uid://baihxtltbmli8" path="res://fonts/VIPNAGORGIALLA RG.OTF" id="3_3h46e"]
[ext_resource type="Texture2D" uid="uid://c5v2xxccyj7e8" path="res://ui/tutorial_sequence/HeartthrobPortrait.png" id="3_ccpuj"]
[ext_resource type="Texture2D" uid="uid://bvsjsk3fnnl65" path="res://ui/tutorial_sequence/BadBoyPortrait.png" id="4_j7prw"]
[ext_resource type="Texture2D" uid="uid://cmpjfubp28y0n" path="res://ui/tutorial_sequence/ShyOnePortrait.png" id="5_5co5o"]
[ext_resource type="Texture2D" uid="uid://dj0lllpx8e1st" path="res://ui/tutorial_sequence/CuteOnePortrait.png" id="6_vlfo0"]
[ext_resource type="Texture2D" uid="uid://q8ighcf0dnym" path="res://ui/tutorial_sequence/OlderBrotherPortrait.png" id="7_0f40m"]
[ext_resource type="Texture2D" uid="uid://i3ch74j41xou" path="res://ui/tutorial_sequence/arrow.png" id="8_ku3iw"]
[ext_resource type="Texture2D" uid="uid://c1il42xf7gbbh" path="res://ui/tutorial_sequence/Screenshot 2025-01-03 183027.png" id="10_w7gxw"]
[ext_resource type="PackedScene" uid="uid://cte5fobhra3n3" path="res://encounters/sprites/cards/card_sprite.tscn" id="12_253lc"]
[ext_resource type="Script" path="res://dialogue/nora_help_dialogue.gd" id="13_ovsfc"]

[sub_resource type="Shader" id="Shader_pk4l7"]
code = "//ATTENTION:
//  THIS IS SHADE AUTOGENERATED BY
//  THE ADDON SPRITE-SHADER-MIXER
//  ANY MANUAL CHANGES WILL BE REMOVED WHEN THE ADDON
//  UPDATES THIS SHADER.
//  ANYWAY, YOU CAN SAVE THE CURRENT VERSION AS A RESOURCE FILE.
//SHADERS:Color Manipulator,Pulse,
shader_type canvas_item;

uniform float opacity:hint_range(0.0, 1.0, 0.01)=1.;

	
//COLORMANIPULATOR
uniform bool COLORMANIPULATOR_active = true;
uniform float COLORMANIPULATOR_brightness : hint_range(-1, 1) = -1.0;
uniform float COLORMANIPULATOR_contrast : hint_range(0, 3) = 3.0;
uniform float COLORMANIPULATOR_saturation : hint_range(0, 3) = 3.0;
uniform float COLORMANIPULATOR_redVal : hint_range(0, 1) = 1.0;
uniform float COLORMANIPULATOR_greenVal : hint_range(0, 1) = 0.5;
uniform float COLORMANIPULATOR_blueVal : hint_range(0, 1) = 1.0;
uniform vec4 COLORMANIPULATOR_tint_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float COLORMANIPULATOR_tint_effect_factor : hint_range(0, 1) = 0.0;
//---------------------------------------------
//CONTRAST
//---------------------------------------------
mat4 COLORMANIPULATOR_contrastMatrix( float _contrast ){
	float t = ( 1.0 - _contrast ) / 2.0;
    return mat4( 
		vec4(_contrast, 0, 0, 0),
		vec4(0, _contrast, 0, 0),
		vec4(0, 0, _contrast, 0),
		vec4(t, t, t, 1));
}
//---------------------------------------------
//BRIGHTNESS
//---------------------------------------------
mat4 COLORMANIPULATOR_brightnessMatrix( float _brightness ){
    return mat4( vec4(1, 0, 0, 0),
                 vec4(0, 1, 0, 0),
                 vec4(0, 0, 1, 0),
                 vec4(_brightness, _brightness, _brightness, 1));
}
//---------------------------------------------
//SATURATION
//---------------------------------------------
mat4 COLORMANIPULATOR_saturationMatrix( float _saturation ){
    vec3 luminance = vec3( 0.3086, 0.6094, 0.0820 );
    float oneMinusSat = 1.0 - _saturation;
	
    vec3 red = vec3( luminance.x * oneMinusSat );
    red+= vec3(_saturation, 0, 0)*COLORMANIPULATOR_redVal;
    vec3 green = vec3( luminance.y * oneMinusSat );
    green += vec3( 0,_saturation, 0 )*COLORMANIPULATOR_greenVal;
    vec3 blue = vec3( luminance.z * oneMinusSat );
    blue += vec3( 0, 0,_saturation )*COLORMANIPULATOR_blueVal;
	
    return mat4(vec4(red, 0),vec4(green,0),vec4(blue,0),vec4(0, 0, 0, 1));
}
void colorManipulator(in vec2 uv, in sampler2D sampler, vec2 size, vec2 pixelSize, inout vec4 color){
	vec4 c2 = color * COLORMANIPULATOR_tint_color;
	color = COLORMANIPULATOR_brightnessMatrix( COLORMANIPULATOR_brightness ) * COLORMANIPULATOR_contrastMatrix( COLORMANIPULATOR_contrast ) * COLORMANIPULATOR_saturationMatrix( COLORMANIPULATOR_saturation ) * mix(color, c2, COLORMANIPULATOR_tint_effect_factor);
}
uniform bool PULSE_active = true; //activation
uniform vec4 PULSE_shine_color : source_color = vec4(1.0); //Shine color
uniform float PULSE_alpha_limit : hint_range(0.0, 1.0, 0.1) = 0.0; //Alpha color limit to apply the shine, for example, if you won't to apply the shine to semi-transparent pixels
uniform float PULSE_cycle_speed : hint_range(0.0, 100.0, 0.1) = 1.0; //Pulse cycle speed
uniform bool PULSE_full_pulse_cycle = false; //[False = Do the effect and make a pause] [True = Do the effect continuosly]
void pulse(in vec2 uv, in sampler2D tex, in vec2 spriteSize, in vec2 pixelSize, inout vec4 color)
{
	//Check the pixel alpha value
	if (color.a >= PULSE_alpha_limit)
	{
		float cycle = sin(TIME * PULSE_cycle_speed);
		color.rgb = mix(color.rgb, PULSE_shine_color.rgb, (((cycle >= 0.0) || (PULSE_full_pulse_cycle)) ? abs(cycle) : 0.0) * PULSE_shine_color.a);
	}
}

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	vec2 size = vec2(textureSize(TEXTURE, 0));
	vec2 uv = UV;
	vec2 screen_uv = SCREEN_UV;

	if(COLORMANIPULATOR_active) colorManipulator(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);
	if(PULSE_active) pulse(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);


	color.a*=opacity;
	COLOR=color;
}

void vertex() {
	
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_3dnc2"]
shader = SubResource("Shader_pk4l7")
shader_parameter/opacity = 1.0
shader_parameter/COLORMANIPULATOR_active = true
shader_parameter/COLORMANIPULATOR_brightness = -0.075
shader_parameter/COLORMANIPULATOR_contrast = 1.25
shader_parameter/COLORMANIPULATOR_saturation = 1.0
shader_parameter/COLORMANIPULATOR_redVal = 1.0
shader_parameter/COLORMANIPULATOR_greenVal = 1.0
shader_parameter/COLORMANIPULATOR_blueVal = 1.0
shader_parameter/COLORMANIPULATOR_tint_color = Color(1, 1, 1, 1)
shader_parameter/COLORMANIPULATOR_tint_effect_factor = 0.0
shader_parameter/PULSE_active = false
shader_parameter/PULSE_shine_color = Color(1, 1, 0, 0.12549)
shader_parameter/PULSE_alpha_limit = 0.0
shader_parameter/PULSE_cycle_speed = 6.0
shader_parameter/PULSE_full_pulse_cycle = true

[sub_resource type="Shader" id="Shader_18jbf"]
code = "//ATTENTION:
//  THIS IS SHADE AUTOGENERATED BY
//  THE ADDON SPRITE-SHADER-MIXER
//  ANY MANUAL CHANGES WILL BE REMOVED WHEN THE ADDON
//  UPDATES THIS SHADER.
//  ANYWAY, YOU CAN SAVE THE CURRENT VERSION AS A RESOURCE FILE.
//SHADERS:Color Manipulator,Pulse,
shader_type canvas_item;

uniform float opacity:hint_range(0.0, 1.0, 0.01)=1.;

	
//COLORMANIPULATOR
uniform bool COLORMANIPULATOR_active = true;
uniform float COLORMANIPULATOR_brightness : hint_range(-1, 1) = -1.0;
uniform float COLORMANIPULATOR_contrast : hint_range(0, 3) = 3.0;
uniform float COLORMANIPULATOR_saturation : hint_range(0, 3) = 3.0;
uniform float COLORMANIPULATOR_redVal : hint_range(0, 1) = 1.0;
uniform float COLORMANIPULATOR_greenVal : hint_range(0, 1) = 0.5;
uniform float COLORMANIPULATOR_blueVal : hint_range(0, 1) = 1.0;
uniform vec4 COLORMANIPULATOR_tint_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float COLORMANIPULATOR_tint_effect_factor : hint_range(0, 1) = 0.0;
//---------------------------------------------
//CONTRAST
//---------------------------------------------
mat4 COLORMANIPULATOR_contrastMatrix( float _contrast ){
	float t = ( 1.0 - _contrast ) / 2.0;
    return mat4( 
		vec4(_contrast, 0, 0, 0),
		vec4(0, _contrast, 0, 0),
		vec4(0, 0, _contrast, 0),
		vec4(t, t, t, 1));
}
//---------------------------------------------
//BRIGHTNESS
//---------------------------------------------
mat4 COLORMANIPULATOR_brightnessMatrix( float _brightness ){
    return mat4( vec4(1, 0, 0, 0),
                 vec4(0, 1, 0, 0),
                 vec4(0, 0, 1, 0),
                 vec4(_brightness, _brightness, _brightness, 1));
}
//---------------------------------------------
//SATURATION
//---------------------------------------------
mat4 COLORMANIPULATOR_saturationMatrix( float _saturation ){
    vec3 luminance = vec3( 0.3086, 0.6094, 0.0820 );
    float oneMinusSat = 1.0 - _saturation;
	
    vec3 red = vec3( luminance.x * oneMinusSat );
    red+= vec3(_saturation, 0, 0)*COLORMANIPULATOR_redVal;
    vec3 green = vec3( luminance.y * oneMinusSat );
    green += vec3( 0,_saturation, 0 )*COLORMANIPULATOR_greenVal;
    vec3 blue = vec3( luminance.z * oneMinusSat );
    blue += vec3( 0, 0,_saturation )*COLORMANIPULATOR_blueVal;
	
    return mat4(vec4(red, 0),vec4(green,0),vec4(blue,0),vec4(0, 0, 0, 1));
}
void colorManipulator(in vec2 uv, in sampler2D sampler, vec2 size, vec2 pixelSize, inout vec4 color){
	vec4 c2 = color * COLORMANIPULATOR_tint_color;
	color = COLORMANIPULATOR_brightnessMatrix( COLORMANIPULATOR_brightness ) * COLORMANIPULATOR_contrastMatrix( COLORMANIPULATOR_contrast ) * COLORMANIPULATOR_saturationMatrix( COLORMANIPULATOR_saturation ) * mix(color, c2, COLORMANIPULATOR_tint_effect_factor);
}
uniform bool PULSE_active = true; //activation
uniform vec4 PULSE_shine_color : source_color = vec4(1.0); //Shine color
uniform float PULSE_alpha_limit : hint_range(0.0, 1.0, 0.1) = 0.0; //Alpha color limit to apply the shine, for example, if you won't to apply the shine to semi-transparent pixels
uniform float PULSE_cycle_speed : hint_range(0.0, 100.0, 0.1) = 1.0; //Pulse cycle speed
uniform bool PULSE_full_pulse_cycle = false; //[False = Do the effect and make a pause] [True = Do the effect continuosly]
void pulse(in vec2 uv, in sampler2D tex, in vec2 spriteSize, in vec2 pixelSize, inout vec4 color)
{
	//Check the pixel alpha value
	if (color.a >= PULSE_alpha_limit)
	{
		float cycle = sin(TIME * PULSE_cycle_speed);
		color.rgb = mix(color.rgb, PULSE_shine_color.rgb, (((cycle >= 0.0) || (PULSE_full_pulse_cycle)) ? abs(cycle) : 0.0) * PULSE_shine_color.a);
	}
}

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	vec2 size = vec2(textureSize(TEXTURE, 0));
	vec2 uv = UV;
	vec2 screen_uv = SCREEN_UV;

	if(COLORMANIPULATOR_active) colorManipulator(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);
	if(PULSE_active) pulse(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);


	color.a*=opacity;
	COLOR=color;
}

void vertex() {
	
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_fo03i"]
shader = SubResource("Shader_18jbf")
shader_parameter/opacity = 1.0
shader_parameter/COLORMANIPULATOR_active = true
shader_parameter/COLORMANIPULATOR_brightness = -0.075
shader_parameter/COLORMANIPULATOR_contrast = 1.25
shader_parameter/COLORMANIPULATOR_saturation = 1.0
shader_parameter/COLORMANIPULATOR_redVal = 1.0
shader_parameter/COLORMANIPULATOR_greenVal = 1.0
shader_parameter/COLORMANIPULATOR_blueVal = 1.0
shader_parameter/COLORMANIPULATOR_tint_color = Color(1, 1, 1, 1)
shader_parameter/COLORMANIPULATOR_tint_effect_factor = 0.0
shader_parameter/PULSE_active = false
shader_parameter/PULSE_shine_color = Color(1, 1, 0, 0.12549)
shader_parameter/PULSE_alpha_limit = 0.0
shader_parameter/PULSE_cycle_speed = 6.0
shader_parameter/PULSE_full_pulse_cycle = true

[sub_resource type="Shader" id="Shader_klgbr"]
code = "//ATTENTION:
//  THIS IS SHADE AUTOGENERATED BY
//  THE ADDON SPRITE-SHADER-MIXER
//  ANY MANUAL CHANGES WILL BE REMOVED WHEN THE ADDON
//  UPDATES THIS SHADER.
//  ANYWAY, YOU CAN SAVE THE CURRENT VERSION AS A RESOURCE FILE.
//SHADERS:Color Manipulator,Pulse,
shader_type canvas_item;

uniform float opacity:hint_range(0.0, 1.0, 0.01)=1.;

	
//COLORMANIPULATOR
uniform bool COLORMANIPULATOR_active = true;
uniform float COLORMANIPULATOR_brightness : hint_range(-1, 1) = -1.0;
uniform float COLORMANIPULATOR_contrast : hint_range(0, 3) = 3.0;
uniform float COLORMANIPULATOR_saturation : hint_range(0, 3) = 3.0;
uniform float COLORMANIPULATOR_redVal : hint_range(0, 1) = 1.0;
uniform float COLORMANIPULATOR_greenVal : hint_range(0, 1) = 0.5;
uniform float COLORMANIPULATOR_blueVal : hint_range(0, 1) = 1.0;
uniform vec4 COLORMANIPULATOR_tint_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float COLORMANIPULATOR_tint_effect_factor : hint_range(0, 1) = 0.0;
//---------------------------------------------
//CONTRAST
//---------------------------------------------
mat4 COLORMANIPULATOR_contrastMatrix( float _contrast ){
	float t = ( 1.0 - _contrast ) / 2.0;
    return mat4( 
		vec4(_contrast, 0, 0, 0),
		vec4(0, _contrast, 0, 0),
		vec4(0, 0, _contrast, 0),
		vec4(t, t, t, 1));
}
//---------------------------------------------
//BRIGHTNESS
//---------------------------------------------
mat4 COLORMANIPULATOR_brightnessMatrix( float _brightness ){
    return mat4( vec4(1, 0, 0, 0),
                 vec4(0, 1, 0, 0),
                 vec4(0, 0, 1, 0),
                 vec4(_brightness, _brightness, _brightness, 1));
}
//---------------------------------------------
//SATURATION
//---------------------------------------------
mat4 COLORMANIPULATOR_saturationMatrix( float _saturation ){
    vec3 luminance = vec3( 0.3086, 0.6094, 0.0820 );
    float oneMinusSat = 1.0 - _saturation;
	
    vec3 red = vec3( luminance.x * oneMinusSat );
    red+= vec3(_saturation, 0, 0)*COLORMANIPULATOR_redVal;
    vec3 green = vec3( luminance.y * oneMinusSat );
    green += vec3( 0,_saturation, 0 )*COLORMANIPULATOR_greenVal;
    vec3 blue = vec3( luminance.z * oneMinusSat );
    blue += vec3( 0, 0,_saturation )*COLORMANIPULATOR_blueVal;
	
    return mat4(vec4(red, 0),vec4(green,0),vec4(blue,0),vec4(0, 0, 0, 1));
}
void colorManipulator(in vec2 uv, in sampler2D sampler, vec2 size, vec2 pixelSize, inout vec4 color){
	vec4 c2 = color * COLORMANIPULATOR_tint_color;
	color = COLORMANIPULATOR_brightnessMatrix( COLORMANIPULATOR_brightness ) * COLORMANIPULATOR_contrastMatrix( COLORMANIPULATOR_contrast ) * COLORMANIPULATOR_saturationMatrix( COLORMANIPULATOR_saturation ) * mix(color, c2, COLORMANIPULATOR_tint_effect_factor);
}
uniform bool PULSE_active = true; //activation
uniform vec4 PULSE_shine_color : source_color = vec4(1.0); //Shine color
uniform float PULSE_alpha_limit : hint_range(0.0, 1.0, 0.1) = 0.0; //Alpha color limit to apply the shine, for example, if you won't to apply the shine to semi-transparent pixels
uniform float PULSE_cycle_speed : hint_range(0.0, 100.0, 0.1) = 1.0; //Pulse cycle speed
uniform bool PULSE_full_pulse_cycle = false; //[False = Do the effect and make a pause] [True = Do the effect continuosly]
void pulse(in vec2 uv, in sampler2D tex, in vec2 spriteSize, in vec2 pixelSize, inout vec4 color)
{
	//Check the pixel alpha value
	if (color.a >= PULSE_alpha_limit)
	{
		float cycle = sin(TIME * PULSE_cycle_speed);
		color.rgb = mix(color.rgb, PULSE_shine_color.rgb, (((cycle >= 0.0) || (PULSE_full_pulse_cycle)) ? abs(cycle) : 0.0) * PULSE_shine_color.a);
	}
}

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	vec2 size = vec2(textureSize(TEXTURE, 0));
	vec2 uv = UV;
	vec2 screen_uv = SCREEN_UV;

	if(COLORMANIPULATOR_active) colorManipulator(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);
	if(PULSE_active) pulse(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);


	color.a*=opacity;
	COLOR=color;
}

void vertex() {
	
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_d0don"]
shader = SubResource("Shader_klgbr")
shader_parameter/opacity = 1.0
shader_parameter/COLORMANIPULATOR_active = true
shader_parameter/COLORMANIPULATOR_brightness = -0.075
shader_parameter/COLORMANIPULATOR_contrast = 1.25
shader_parameter/COLORMANIPULATOR_saturation = 1.0
shader_parameter/COLORMANIPULATOR_redVal = 1.0
shader_parameter/COLORMANIPULATOR_greenVal = 1.0
shader_parameter/COLORMANIPULATOR_blueVal = 1.0
shader_parameter/COLORMANIPULATOR_tint_color = Color(1, 1, 1, 1)
shader_parameter/COLORMANIPULATOR_tint_effect_factor = 0.0
shader_parameter/PULSE_active = false
shader_parameter/PULSE_shine_color = Color(1, 1, 0, 0.12549)
shader_parameter/PULSE_alpha_limit = 0.0
shader_parameter/PULSE_cycle_speed = 6.0
shader_parameter/PULSE_full_pulse_cycle = true

[sub_resource type="Shader" id="Shader_dvu52"]
code = "//ATTENTION:
//  THIS IS SHADE AUTOGENERATED BY
//  THE ADDON SPRITE-SHADER-MIXER
//  ANY MANUAL CHANGES WILL BE REMOVED WHEN THE ADDON
//  UPDATES THIS SHADER.
//  ANYWAY, YOU CAN SAVE THE CURRENT VERSION AS A RESOURCE FILE.
//SHADERS:Color Manipulator,Pulse,
shader_type canvas_item;

uniform float opacity:hint_range(0.0, 1.0, 0.01)=1.;

	
//COLORMANIPULATOR
uniform bool COLORMANIPULATOR_active = true;
uniform float COLORMANIPULATOR_brightness : hint_range(-1, 1) = -1.0;
uniform float COLORMANIPULATOR_contrast : hint_range(0, 3) = 3.0;
uniform float COLORMANIPULATOR_saturation : hint_range(0, 3) = 3.0;
uniform float COLORMANIPULATOR_redVal : hint_range(0, 1) = 1.0;
uniform float COLORMANIPULATOR_greenVal : hint_range(0, 1) = 0.5;
uniform float COLORMANIPULATOR_blueVal : hint_range(0, 1) = 1.0;
uniform vec4 COLORMANIPULATOR_tint_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float COLORMANIPULATOR_tint_effect_factor : hint_range(0, 1) = 0.0;
//---------------------------------------------
//CONTRAST
//---------------------------------------------
mat4 COLORMANIPULATOR_contrastMatrix( float _contrast ){
	float t = ( 1.0 - _contrast ) / 2.0;
    return mat4( 
		vec4(_contrast, 0, 0, 0),
		vec4(0, _contrast, 0, 0),
		vec4(0, 0, _contrast, 0),
		vec4(t, t, t, 1));
}
//---------------------------------------------
//BRIGHTNESS
//---------------------------------------------
mat4 COLORMANIPULATOR_brightnessMatrix( float _brightness ){
    return mat4( vec4(1, 0, 0, 0),
                 vec4(0, 1, 0, 0),
                 vec4(0, 0, 1, 0),
                 vec4(_brightness, _brightness, _brightness, 1));
}
//---------------------------------------------
//SATURATION
//---------------------------------------------
mat4 COLORMANIPULATOR_saturationMatrix( float _saturation ){
    vec3 luminance = vec3( 0.3086, 0.6094, 0.0820 );
    float oneMinusSat = 1.0 - _saturation;
	
    vec3 red = vec3( luminance.x * oneMinusSat );
    red+= vec3(_saturation, 0, 0)*COLORMANIPULATOR_redVal;
    vec3 green = vec3( luminance.y * oneMinusSat );
    green += vec3( 0,_saturation, 0 )*COLORMANIPULATOR_greenVal;
    vec3 blue = vec3( luminance.z * oneMinusSat );
    blue += vec3( 0, 0,_saturation )*COLORMANIPULATOR_blueVal;
	
    return mat4(vec4(red, 0),vec4(green,0),vec4(blue,0),vec4(0, 0, 0, 1));
}
void colorManipulator(in vec2 uv, in sampler2D sampler, vec2 size, vec2 pixelSize, inout vec4 color){
	vec4 c2 = color * COLORMANIPULATOR_tint_color;
	color = COLORMANIPULATOR_brightnessMatrix( COLORMANIPULATOR_brightness ) * COLORMANIPULATOR_contrastMatrix( COLORMANIPULATOR_contrast ) * COLORMANIPULATOR_saturationMatrix( COLORMANIPULATOR_saturation ) * mix(color, c2, COLORMANIPULATOR_tint_effect_factor);
}
uniform bool PULSE_active = true; //activation
uniform vec4 PULSE_shine_color : source_color = vec4(1.0); //Shine color
uniform float PULSE_alpha_limit : hint_range(0.0, 1.0, 0.1) = 0.0; //Alpha color limit to apply the shine, for example, if you won't to apply the shine to semi-transparent pixels
uniform float PULSE_cycle_speed : hint_range(0.0, 100.0, 0.1) = 1.0; //Pulse cycle speed
uniform bool PULSE_full_pulse_cycle = false; //[False = Do the effect and make a pause] [True = Do the effect continuosly]
void pulse(in vec2 uv, in sampler2D tex, in vec2 spriteSize, in vec2 pixelSize, inout vec4 color)
{
	//Check the pixel alpha value
	if (color.a >= PULSE_alpha_limit)
	{
		float cycle = sin(TIME * PULSE_cycle_speed);
		color.rgb = mix(color.rgb, PULSE_shine_color.rgb, (((cycle >= 0.0) || (PULSE_full_pulse_cycle)) ? abs(cycle) : 0.0) * PULSE_shine_color.a);
	}
}

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	vec2 size = vec2(textureSize(TEXTURE, 0));
	vec2 uv = UV;
	vec2 screen_uv = SCREEN_UV;

	if(COLORMANIPULATOR_active) colorManipulator(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);
	if(PULSE_active) pulse(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);


	color.a*=opacity;
	COLOR=color;
}

void vertex() {
	
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_01bgt"]
shader = SubResource("Shader_dvu52")
shader_parameter/opacity = 1.0
shader_parameter/COLORMANIPULATOR_active = true
shader_parameter/COLORMANIPULATOR_brightness = -0.075
shader_parameter/COLORMANIPULATOR_contrast = 1.25
shader_parameter/COLORMANIPULATOR_saturation = 1.0
shader_parameter/COLORMANIPULATOR_redVal = 1.0
shader_parameter/COLORMANIPULATOR_greenVal = 1.0
shader_parameter/COLORMANIPULATOR_blueVal = 1.0
shader_parameter/COLORMANIPULATOR_tint_color = Color(1, 1, 1, 1)
shader_parameter/COLORMANIPULATOR_tint_effect_factor = 0.0
shader_parameter/PULSE_active = false
shader_parameter/PULSE_shine_color = Color(1, 1, 0, 0.12549)
shader_parameter/PULSE_alpha_limit = 0.0
shader_parameter/PULSE_cycle_speed = 6.0
shader_parameter/PULSE_full_pulse_cycle = true

[sub_resource type="Shader" id="Shader_maqjd"]
code = "//ATTENTION:
//  THIS IS SHADE AUTOGENERATED BY
//  THE ADDON SPRITE-SHADER-MIXER
//  ANY MANUAL CHANGES WILL BE REMOVED WHEN THE ADDON
//  UPDATES THIS SHADER.
//  ANYWAY, YOU CAN SAVE THE CURRENT VERSION AS A RESOURCE FILE.
//SHADERS:Color Manipulator,Pulse,
shader_type canvas_item;

uniform float opacity:hint_range(0.0, 1.0, 0.01)=1.;

	
//COLORMANIPULATOR
uniform bool COLORMANIPULATOR_active = true;
uniform float COLORMANIPULATOR_brightness : hint_range(-1, 1) = -1.0;
uniform float COLORMANIPULATOR_contrast : hint_range(0, 3) = 3.0;
uniform float COLORMANIPULATOR_saturation : hint_range(0, 3) = 3.0;
uniform float COLORMANIPULATOR_redVal : hint_range(0, 1) = 1.0;
uniform float COLORMANIPULATOR_greenVal : hint_range(0, 1) = 0.5;
uniform float COLORMANIPULATOR_blueVal : hint_range(0, 1) = 1.0;
uniform vec4 COLORMANIPULATOR_tint_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float COLORMANIPULATOR_tint_effect_factor : hint_range(0, 1) = 0.0;
//---------------------------------------------
//CONTRAST
//---------------------------------------------
mat4 COLORMANIPULATOR_contrastMatrix( float _contrast ){
	float t = ( 1.0 - _contrast ) / 2.0;
    return mat4( 
		vec4(_contrast, 0, 0, 0),
		vec4(0, _contrast, 0, 0),
		vec4(0, 0, _contrast, 0),
		vec4(t, t, t, 1));
}
//---------------------------------------------
//BRIGHTNESS
//---------------------------------------------
mat4 COLORMANIPULATOR_brightnessMatrix( float _brightness ){
    return mat4( vec4(1, 0, 0, 0),
                 vec4(0, 1, 0, 0),
                 vec4(0, 0, 1, 0),
                 vec4(_brightness, _brightness, _brightness, 1));
}
//---------------------------------------------
//SATURATION
//---------------------------------------------
mat4 COLORMANIPULATOR_saturationMatrix( float _saturation ){
    vec3 luminance = vec3( 0.3086, 0.6094, 0.0820 );
    float oneMinusSat = 1.0 - _saturation;
	
    vec3 red = vec3( luminance.x * oneMinusSat );
    red+= vec3(_saturation, 0, 0)*COLORMANIPULATOR_redVal;
    vec3 green = vec3( luminance.y * oneMinusSat );
    green += vec3( 0,_saturation, 0 )*COLORMANIPULATOR_greenVal;
    vec3 blue = vec3( luminance.z * oneMinusSat );
    blue += vec3( 0, 0,_saturation )*COLORMANIPULATOR_blueVal;
	
    return mat4(vec4(red, 0),vec4(green,0),vec4(blue,0),vec4(0, 0, 0, 1));
}
void colorManipulator(in vec2 uv, in sampler2D sampler, vec2 size, vec2 pixelSize, inout vec4 color){
	vec4 c2 = color * COLORMANIPULATOR_tint_color;
	color = COLORMANIPULATOR_brightnessMatrix( COLORMANIPULATOR_brightness ) * COLORMANIPULATOR_contrastMatrix( COLORMANIPULATOR_contrast ) * COLORMANIPULATOR_saturationMatrix( COLORMANIPULATOR_saturation ) * mix(color, c2, COLORMANIPULATOR_tint_effect_factor);
}
uniform bool PULSE_active = true; //activation
uniform vec4 PULSE_shine_color : source_color = vec4(1.0); //Shine color
uniform float PULSE_alpha_limit : hint_range(0.0, 1.0, 0.1) = 0.0; //Alpha color limit to apply the shine, for example, if you won't to apply the shine to semi-transparent pixels
uniform float PULSE_cycle_speed : hint_range(0.0, 100.0, 0.1) = 1.0; //Pulse cycle speed
uniform bool PULSE_full_pulse_cycle = false; //[False = Do the effect and make a pause] [True = Do the effect continuosly]
void pulse(in vec2 uv, in sampler2D tex, in vec2 spriteSize, in vec2 pixelSize, inout vec4 color)
{
	//Check the pixel alpha value
	if (color.a >= PULSE_alpha_limit)
	{
		float cycle = sin(TIME * PULSE_cycle_speed);
		color.rgb = mix(color.rgb, PULSE_shine_color.rgb, (((cycle >= 0.0) || (PULSE_full_pulse_cycle)) ? abs(cycle) : 0.0) * PULSE_shine_color.a);
	}
}

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	vec2 size = vec2(textureSize(TEXTURE, 0));
	vec2 uv = UV;
	vec2 screen_uv = SCREEN_UV;

	if(COLORMANIPULATOR_active) colorManipulator(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);
	if(PULSE_active) pulse(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);


	color.a*=opacity;
	COLOR=color;
}

void vertex() {
	
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_c1tqt"]
shader = SubResource("Shader_maqjd")
shader_parameter/opacity = 1.0
shader_parameter/COLORMANIPULATOR_active = true
shader_parameter/COLORMANIPULATOR_brightness = -0.075
shader_parameter/COLORMANIPULATOR_contrast = 1.25
shader_parameter/COLORMANIPULATOR_saturation = 1.0
shader_parameter/COLORMANIPULATOR_redVal = 1.0
shader_parameter/COLORMANIPULATOR_greenVal = 1.0
shader_parameter/COLORMANIPULATOR_blueVal = 1.0
shader_parameter/COLORMANIPULATOR_tint_color = Color(1, 1, 1, 1)
shader_parameter/COLORMANIPULATOR_tint_effect_factor = 0.0
shader_parameter/PULSE_active = false
shader_parameter/PULSE_shine_color = Color(1, 1, 0, 0.12549)
shader_parameter/PULSE_alpha_limit = 0.0
shader_parameter/PULSE_cycle_speed = 6.0
shader_parameter/PULSE_full_pulse_cycle = true

[node name="TutorialSequenceDeck" type="Node2D"]
script = ExtResource("1_vkuta")

[node name="TextureRect" type="TextureRect" parent="."]
self_modulate = Color(1, 1, 1, 0.211765)
offset_right = 1920.0
offset_bottom = 1080.0
texture = ExtResource("2_j0hih")

[node name="RootPanel" type="Panel" parent="."]
self_modulate = Color(1, 1, 1, 0)
offset_right = 1366.0
offset_bottom = 750.0

[node name="CaptionsPanel" type="Panel" parent="RootPanel"]
self_modulate = Color(1, 1, 1, 0)
layout_mode = 1
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = -683.0
offset_top = -103.0
offset_right = 683.0
offset_bottom = -3.0
grow_horizontal = 2
grow_vertical = 0

[node name="Step0" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "Your BOY BAND BEATDOWN deck..."
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="Step1" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "These are the five suits in your deck. Each suit has a win-or-lose relationship with the others"
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="Step2" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "The Shy One's mysterious depth defeats the Cute One's superficial charm."
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="Step3" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "The Cute One's irresistible charm melts the Older Brother's cynical resistance."
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="Step4" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "Older Brother's discipline and experience overpower the Shy One's self-doubt."
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="Step5" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "These are the three balanced suits—each one wins against one and loses against the other."
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="Step6" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "These are the two dominant suits."
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="Step7" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "The Heartthrob's polished charisma overpowers the Shy One's meekness."
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="Step8" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "The Heartthrob's star power eclipses the Cute One's boyish charm."
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="Step9" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "The Heartthrob's youthful energy outshines the Older Brother's cynicism."
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="Step10" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "The three balanced suits all defeat the Bad Boy's impulsive bravado."
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="Step11" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "...But the Bad Boy's raw authenticity shatters the Heartthrob's manufactured perfection."
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="Step12" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "The Bad Boy is the only suit that can defeat the Heartthrob!"
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="Step13" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "If two cards face off with the same suit, their rank determines the winner. Higher-ranked cards always beat lower-ranked ones."
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="Step14" type="Label" parent="RootPanel/CaptionsPanel"]
visible = false
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -517.5
offset_right = 516.5
offset_bottom = 100.0
grow_horizontal = 2
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 2
theme_override_constants/shadow_offset_y = 2
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("3_3h46e")
theme_override_font_sizes/font_size = 20
text = "As you level up in the game, your deck will contain more higher-ranked cards, making you a more powerful player!"
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[node name="DiagramPanel" type="Panel" parent="RootPanel"]
self_modulate = Color(1, 1, 1, 0)
layout_mode = 0
offset_right = 40.0
offset_bottom = 40.0

[node name="Portraits" type="Node2D" parent="RootPanel/DiagramPanel"]

[node name="HeartthrobSprite" type="Sprite2D" parent="RootPanel/DiagramPanel/Portraits"]
material = SubResource("ShaderMaterial_3dnc2")
position = Vector2(342, 125)
scale = Vector2(0.25, 0.25)
texture = ExtResource("3_ccpuj")

[node name="BadBoySprite" type="Sprite2D" parent="RootPanel/DiagramPanel/Portraits"]
material = SubResource("ShaderMaterial_fo03i")
position = Vector2(1026, 125)
scale = Vector2(0.25, 0.25)
texture = ExtResource("4_j7prw")

[node name="ShyOneSprite" type="Sprite2D" parent="RootPanel/DiagramPanel/Portraits"]
material = SubResource("ShaderMaterial_d0don")
position = Vector2(684, 275)
scale = Vector2(0.25, 0.25)
texture = ExtResource("5_5co5o")

[node name="CuteOneSprite" type="Sprite2D" parent="RootPanel/DiagramPanel/Portraits"]
material = SubResource("ShaderMaterial_01bgt")
position = Vector2(513, 550)
scale = Vector2(0.25, 0.25)
texture = ExtResource("6_vlfo0")

[node name="OlderBrotherSprite" type="Sprite2D" parent="RootPanel/DiagramPanel/Portraits"]
material = SubResource("ShaderMaterial_c1tqt")
position = Vector2(855, 550)
scale = Vector2(0.25, 0.25)
texture = ExtResource("7_0f40m")

[node name="Arrows" type="Node2D" parent="RootPanel/DiagramPanel"]

[node name="BadBoyToHeartthrob" type="Sprite2D" parent="RootPanel/DiagramPanel/Arrows"]
visible = false
self_modulate = Color(0.501961, 0.501961, 0.501961, 1)
position = Vector2(682.25, 119)
scale = Vector2(2.61518, 1)
texture = ExtResource("8_ku3iw")
flip_h = true

[node name="HeartthrobToShyOne" type="Sprite2D" parent="RootPanel/DiagramPanel/Arrows"]
visible = false
self_modulate = Color(0.501961, 0.501961, 0.501961, 1)
position = Vector2(513.58, 225.041)
rotation = 0.527089
scale = Vector2(1.08227, 1)
texture = ExtResource("8_ku3iw")

[node name="ShyOneToBadBoy" type="Sprite2D" parent="RootPanel/DiagramPanel/Arrows"]
visible = false
self_modulate = Color(0.501961, 0.501961, 0.501961, 1)
position = Vector2(855, 228)
rotation = -0.527089
scale = Vector2(1.08227, 1)
texture = ExtResource("8_ku3iw")

[node name="HeartthrobToOlderBrother" type="Sprite2D" parent="RootPanel/DiagramPanel/Arrows"]
visible = false
self_modulate = Color(0.501961, 0.501961, 0.501961, 1)
position = Vector2(592.477, 373.851)
rotation = 0.679258
scale = Vector2(2.37935, 1)
texture = ExtResource("8_ku3iw")

[node name="CuteOneToBadBoy" type="Sprite2D" parent="RootPanel/DiagramPanel/Arrows"]
visible = false
self_modulate = Color(0.501961, 0.501961, 0.501961, 1)
position = Vector2(776, 366)
rotation = -0.678933
scale = Vector2(2.37935, 1)
texture = ExtResource("8_ku3iw")

[node name="HeartthrobToCuteOne" type="Sprite2D" parent="RootPanel/DiagramPanel/Arrows"]
visible = false
self_modulate = Color(0.501961, 0.501961, 0.501961, 1)
position = Vector2(417.948, 335.498)
rotation = 1.00705
scale = Vector2(1.32014, 1)
texture = ExtResource("8_ku3iw")

[node name="OlderBrotherToBadBoy" type="Sprite2D" parent="RootPanel/DiagramPanel/Arrows"]
visible = false
self_modulate = Color(0.501961, 0.501961, 0.501961, 1)
position = Vector2(973, 347)
rotation = -1.00705
scale = Vector2(1.32014, 1)
texture = ExtResource("8_ku3iw")

[node name="CuteOneToOlderBrother" type="Sprite2D" parent="RootPanel/DiagramPanel/Arrows"]
visible = false
self_modulate = Color(1, 1, 0, 1)
position = Vector2(683, 570)
scale = Vector2(0.932323, 1)
texture = ExtResource("8_ku3iw")

[node name="ShyOneToCuteOne" type="Sprite2D" parent="RootPanel/DiagramPanel/Arrows"]
visible = false
self_modulate = Color(1, 1, 0, 1)
position = Vector2(558, 383)
rotation = 2.17119
scale = Vector2(0.771618, 1)
texture = ExtResource("8_ku3iw")

[node name="OlderBrotherToShyOne" type="Sprite2D" parent="RootPanel/DiagramPanel/Arrows"]
visible = false
self_modulate = Color(1, 1, 0, 1)
position = Vector2(814, 385)
rotation = -2.17119
scale = Vector2(0.771618, 1)
texture = ExtResource("8_ku3iw")

[node name="ContinueButton" type="Button" parent="RootPanel"]
layout_mode = 0
offset_left = 1210.0
offset_top = 677.0
offset_right = 1341.0
offset_bottom = 710.0
theme_override_colors/font_color = Color(1, 1, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/outline_size = 1
theme_override_fonts/font = ExtResource("2_2itq6")
theme_override_font_sizes/font_size = 16
text = "Continue"

[node name="CardsPanel" type="Panel" parent="RootPanel"]
self_modulate = Color(1, 1, 1, 0)
layout_mode = 0
offset_right = 40.0
offset_bottom = 40.0

[node name="TieSprite" type="Sprite2D" parent="RootPanel/CardsPanel"]
visible = false
position = Vector2(691, 367)
scale = Vector2(0.9, 0.9)
texture = ExtResource("10_w7gxw")

[node name="LeftCardSprite" parent="RootPanel/CardsPanel" instance=ExtResource("12_253lc")]
position = Vector2(543, 400)

[node name="RightCardSprite" parent="RootPanel/CardsPanel" instance=ExtResource("12_253lc")]
position = Vector2(895, 402)

[node name="NorHelpDialogue" type="Node" parent="."]
script = ExtResource("13_ovsfc")
dialogue_resource_string = "res://dialogue/main_dialogue.dialogue"

[connection signal="mouse_entered" from="RootPanel/ContinueButton" to="." method="_on_continue_button_mouse_entered"]
[connection signal="pressed" from="RootPanel/ContinueButton" to="." method="_on_continue_button_pressed"]
