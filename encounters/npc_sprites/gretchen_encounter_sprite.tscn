[gd_scene load_steps=58 format=3 uid="uid://juusc1s731ic"]

[ext_resource type="Texture2D" uid="uid://cv0khgf6oga8r" path="res://encounters/sprites/gretchen/gretchen_attack_01.png" id="1_enonv"]
[ext_resource type="Script" path="res://encounters/encounter_sprite.gd" id="1_qlg4w"]
[ext_resource type="Texture2D" uid="uid://cxt5ukqdtqexl" path="res://encounters/sprites/gretchen/gretchen_attack_03.png" id="2_kmcyd"]
[ext_resource type="Texture2D" uid="uid://cyq7ee1o7rxa" path="res://encounters/sprites/gretchen/gretchen_attack_05.png" id="3_qkx5h"]
[ext_resource type="Texture2D" uid="uid://dw0p8oim43muc" path="res://encounters/sprites/gretchen/gretchen_attack_07.png" id="4_kbj2x"]
[ext_resource type="Texture2D" uid="uid://bxl8lw3ycfv53" path="res://encounters/sprites/gretchen/gretchen_attack_09.png" id="5_hl5g8"]
[ext_resource type="Texture2D" uid="uid://b3idneav157fh" path="res://encounters/sprites/gretchen/gretchen_attack_11.png" id="6_tl00f"]
[ext_resource type="Texture2D" uid="uid://dbsv74p7yydwc" path="res://encounters/sprites/gretchen/gretchen_attack_13.png" id="7_u0ijc"]
[ext_resource type="Texture2D" uid="uid://cauf6vk2e46cp" path="res://encounters/sprites/gretchen/gretchen_attack_15.png" id="8_wgpaq"]
[ext_resource type="Texture2D" uid="uid://bi6qlb6j7uhyg" path="res://encounters/sprites/gretchen/gretchen_attack_17.png" id="9_uvnpc"]
[ext_resource type="Texture2D" uid="uid://c8kmslrb6y7xk" path="res://encounters/sprites/gretchen/gretchen_attack_19.png" id="10_0xrp8"]
[ext_resource type="Texture2D" uid="uid://px3n6kr7qoir" path="res://encounters/sprites/gretchen/gretchen_attack_21.png" id="11_koqkn"]
[ext_resource type="Texture2D" uid="uid://nrhldg66iscb" path="res://encounters/sprites/gretchen/gretchen_attack_23.png" id="12_fc4ay"]
[ext_resource type="Texture2D" uid="uid://c21ei3545rho6" path="res://encounters/sprites/gretchen/gretchen_attack_25.png" id="13_33alc"]
[ext_resource type="Texture2D" uid="uid://hsxqrsj5c8lw" path="res://encounters/sprites/gretchen/gretchen_attack_27.png" id="14_3s6wb"]
[ext_resource type="Texture2D" uid="uid://cuoud8l0q0gdp" path="res://encounters/sprites/gretchen/gretchen_attack_29.png" id="15_cf8t1"]
[ext_resource type="Texture2D" uid="uid://d0jvwa3sebn5i" path="res://encounters/sprites/gretchen/gretchen_attack_31.png" id="16_uf108"]
[ext_resource type="Texture2D" uid="uid://bkmyj7qqvecvx" path="res://encounters/sprites/gretchen/gretchen_attack_33.png" id="17_d3bwl"]
[ext_resource type="Texture2D" uid="uid://ehr8jwoy58ax" path="res://encounters/sprites/gretchen/gretchen_attack_35.png" id="18_6g7d2"]
[ext_resource type="Texture2D" uid="uid://bebkaanns4ump" path="res://encounters/sprites/gretchen/gretchen_attack_37.png" id="19_3owml"]
[ext_resource type="Texture2D" uid="uid://cxouj52a6fn4y" path="res://encounters/sprites/gretchen/gretchen_attack_39.png" id="20_xr8l6"]
[ext_resource type="Texture2D" uid="uid://bvt4i3pxwmwqb" path="res://encounters/sprites/gretchen/gretchen_attack_41.png" id="21_d44x7"]
[ext_resource type="Texture2D" uid="uid://dtjbufb6dlfqw" path="res://encounters/sprites/gretchen/gretchen_attack_43.png" id="22_d1037"]
[ext_resource type="Texture2D" uid="uid://t6lhi1siijqw" path="res://encounters/sprites/gretchen/gretchen_attack_45.png" id="23_bp5w5"]
[ext_resource type="Texture2D" uid="uid://fn2tv0jyupxi" path="res://encounters/sprites/gretchen/gretchen_attack_47.png" id="24_0amg0"]
[ext_resource type="Texture2D" uid="uid://ow5e868l3dfw" path="res://encounters/sprites/gretchen/gretchen_attack_49.png" id="25_s63ur"]
[ext_resource type="Texture2D" uid="uid://4pfxfdx0j18c" path="res://encounters/sprites/gretchen/gretchen_attack_51.png" id="26_e3nvn"]
[ext_resource type="Texture2D" uid="uid://covrinhi2i50q" path="res://encounters/sprites/gretchen/gretchen_attack_53.png" id="27_ly8ed"]
[ext_resource type="Texture2D" uid="uid://32mmgab17tdg" path="res://encounters/sprites/gretchen/gretchen_attack_55.png" id="28_oc25x"]
[ext_resource type="Texture2D" uid="uid://w5o5fgpgnfkb" path="res://encounters/sprites/gretchen/gretchen_attack_57.png" id="29_7lixp"]
[ext_resource type="Texture2D" uid="uid://c7vy5nphqnspj" path="res://encounters/sprites/gretchen/gretchen_idle_100.png" id="30_xkqwr"]
[ext_resource type="Texture2D" uid="uid://bw0elb2lxqjlk" path="res://encounters/sprites/gretchen/gretchen_win_00.png" id="31_70m5a"]
[ext_resource type="Texture2D" uid="uid://3gf4gj10fgrw" path="res://ui/assets/flash-light-effect-free-png.png" id="32_odapo"]
[ext_resource type="Texture2D" uid="uid://ddjcofea4gxow" path="res://encounters/sprites/gretchen/gretchen_win_01.png" id="32_vgq4r"]
[ext_resource type="FontFile" uid="uid://c4myb8bqhxmi8" path="res://fonts/VIPNAGORGIALLA BD IT.OTF" id="33_2s6ps"]
[ext_resource type="Texture2D" uid="uid://p3wgkdcifvto" path="res://encounters/sprites/gretchen/gretchen_win_02.png" id="33_diafe"]
[ext_resource type="Texture2D" uid="uid://5f8x1f4nw3yn" path="res://encounters/sprites/gretchen/gretchen_win_03.png" id="34_m7vx6"]
[ext_resource type="Texture2D" uid="uid://7seofc8sisn0" path="res://encounters/sprites/gretchen/gretchen_win_04.png" id="35_5fhbu"]
[ext_resource type="Texture2D" uid="uid://dowt3h10cbvnu" path="res://encounters/sprites/gretchen/gretchen_win_05.png" id="36_olu6l"]
[ext_resource type="Texture2D" uid="uid://4kx58qoed6ae" path="res://encounters/sprites/gretchen/gretchen_win_06.png" id="37_fht2f"]
[ext_resource type="Texture2D" uid="uid://bvb42uqbq3h07" path="res://encounters/sprites/gretchen/gretchen_win_07.png" id="38_ao2p0"]
[ext_resource type="Texture2D" uid="uid://dp4pn6b15atdw" path="res://encounters/sprites/gretchen/gretchen_win_08.png" id="39_dxeal"]
[ext_resource type="Texture2D" uid="uid://cneqnjbr6kqp8" path="res://encounters/sprites/gretchen/gretchen_win_09.png" id="40_tjw2c"]
[ext_resource type="Texture2D" uid="uid://ch5oluwsyehm1" path="res://encounters/sprites/gretchen/gretchen_win_10.png" id="41_mwfp6"]
[ext_resource type="Texture2D" uid="uid://pqe1hougsb1j" path="res://encounters/sprites/gretchen/gretchen_win_11.png" id="42_50khu"]
[ext_resource type="Texture2D" uid="uid://gaa1no3vil8c" path="res://encounters/sprites/gretchen/gretchen_win_12.png" id="43_kgfws"]
[ext_resource type="Texture2D" uid="uid://dlcdeu5ruqcg8" path="res://encounters/sprites/gretchen/gretchen_win_13.png" id="44_jxfye"]
[ext_resource type="Texture2D" uid="uid://c3b74h3t3q2bk" path="res://encounters/sprites/gretchen/gretchen_win_14.png" id="45_k1urt"]
[ext_resource type="Texture2D" uid="uid://dc7hqdjd3ngpo" path="res://encounters/sprites/gretchen/gretchen_win_15.png" id="46_7v2f0"]
[ext_resource type="Texture2D" uid="uid://cghn84e1j48n" path="res://encounters/sprites/gretchen/gretchen_win_16.png" id="47_vn4a3"]
[ext_resource type="Texture2D" uid="uid://c0n866hxa2iyq" path="res://encounters/sprites/gretchen/gretchen_win_17.png" id="48_nk4wx"]
[ext_resource type="Texture2D" uid="uid://ltcy8ow131yn" path="res://encounters/sprites/gretchen/gretchen_win_18.png" id="49_s70k8"]

[sub_resource type="Shader" id="Shader_yykex"]
code = "//ATTENTION:
//  THIS IS SHADE AUTOGENERATED BY
//  THE ADDON SPRITE-SHADER-MIXER
//  ANY MANUAL CHANGES WILL BE REMOVED WHEN THE ADDON
//  UPDATES THIS SHADER.
//  ANYWAY, YOU CAN SAVE THE CURRENT VERSION AS A RESOURCE FILE.
//SHADERS:Color Manipulator,Outline,Border Noise,
shader_type canvas_item;

uniform float opacity:hint_range(0.0, 1.0, 0.01)=1.;

	
//COLORMANIPULATOR
uniform bool COLORMANIPULATOR_active = true;
uniform float COLORMANIPULATOR_brightness : hint_range(-1, 1) = -1.0;
uniform float COLORMANIPULATOR_contrast : hint_range(0, 3) = 3.0;
uniform float COLORMANIPULATOR_saturation : hint_range(0, 3) = 3.0;
uniform float COLORMANIPULATOR_redVal : hint_range(0, 1) = 1.0;
uniform float COLORMANIPULATOR_greenVal : hint_range(0, 1) = 0.5;
uniform float COLORMANIPULATOR_blueVal : hint_range(0, 1) = 1.0;
uniform vec4 COLORMANIPULATOR_tint_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float COLORMANIPULATOR_tint_effect_factor : hint_range(0, 1) = 0.0;
//---------------------------------------------
//CONTRAST
//---------------------------------------------
mat4 COLORMANIPULATOR_contrastMatrix( float _contrast ){
	float t = ( 1.0 - _contrast ) / 2.0;
    return mat4( 
		vec4(_contrast, 0, 0, 0),
		vec4(0, _contrast, 0, 0),
		vec4(0, 0, _contrast, 0),
		vec4(t, t, t, 1));
}
//---------------------------------------------
//BRIGHTNESS
//---------------------------------------------
mat4 COLORMANIPULATOR_brightnessMatrix( float _brightness ){
    return mat4( vec4(1, 0, 0, 0),
                 vec4(0, 1, 0, 0),
                 vec4(0, 0, 1, 0),
                 vec4(_brightness, _brightness, _brightness, 1));
}
//---------------------------------------------
//SATURATION
//---------------------------------------------
mat4 COLORMANIPULATOR_saturationMatrix( float _saturation ){
    vec3 luminance = vec3( 0.3086, 0.6094, 0.0820 );
    float oneMinusSat = 1.0 - _saturation;
	
    vec3 red = vec3( luminance.x * oneMinusSat );
    red+= vec3(_saturation, 0, 0)*COLORMANIPULATOR_redVal;
    vec3 green = vec3( luminance.y * oneMinusSat );
    green += vec3( 0,_saturation, 0 )*COLORMANIPULATOR_greenVal;
    vec3 blue = vec3( luminance.z * oneMinusSat );
    blue += vec3( 0, 0,_saturation )*COLORMANIPULATOR_blueVal;
	
    return mat4(vec4(red, 0),vec4(green,0),vec4(blue,0),vec4(0, 0, 0, 1));
}
void colorManipulator(in vec2 uv, in sampler2D sampler, vec2 size, vec2 pixelSize, inout vec4 color){
	vec4 c2 = color * COLORMANIPULATOR_tint_color;
	color = COLORMANIPULATOR_brightnessMatrix( COLORMANIPULATOR_brightness ) * COLORMANIPULATOR_contrastMatrix( COLORMANIPULATOR_contrast ) * COLORMANIPULATOR_saturationMatrix( COLORMANIPULATOR_saturation ) * mix(color, c2, COLORMANIPULATOR_tint_effect_factor);
}
//OUTLINE
uniform bool  OUTLINE_active  = true;
uniform float OUTLINE_thickness : hint_range(0, 30) = 20.0;
uniform vec4  OUTLINE_color : source_color = vec4(1,0,0,1);
void outline(in vec2 uv, in sampler2D tex, in vec2 spriteSize, in vec2 pixelSize, inout vec4 color) {
    vec2 size = vec2(OUTLINE_thickness) / spriteSize;
	   
    float alpha = color.a;
    alpha += texture(tex, uv + vec2(0.0, -size.y)).a;
    alpha += texture(tex, uv + vec2(size.x, -size.y)).a;
    alpha += texture(tex, uv + vec2(size.x, 0.0)).a;
    alpha += texture(tex, uv + vec2(size.x, size.y)).a;
    alpha += texture(tex, uv + vec2(0.0, size.y)).a;
    alpha += texture(tex, uv + vec2(-size.x, size.y)).a;
    alpha += texture(tex, uv + vec2(-size.x, 0.0)).a;
    alpha += texture(tex, uv + vec2(-size.x, -size.y)).a;
   
    vec3 final_color = mix(OUTLINE_color.rgb, color.rgb, color.a);
    color = vec4(final_color, clamp(alpha, 0.0, 1.0));
}
uniform bool BORDERNOISE_active = true;
uniform float BORDERNOISE_max_line_width:hint_range(0.0, 50.0, 0.1) = 10.0;
uniform float BORDERNOISE_min_line_width:hint_range(0.0, 1000.0, 0.1) = 88.0;
uniform float BORDERNOISE_freq:hint_range(0.0, 12.0, 0.1) = 1.0;
uniform float BORDERNOISE_block_size:hint_range(0.0, 100.0, 0.1) = 20.0;
uniform vec4 BORDERNOISE_starting_colour : source_color= vec4(0,0,0,1);
uniform vec4 BORDERNOISE_ending_colour: source_color = vec4(1,0,0,1);
const float BORDERNOISE_pi = 3.1415;
const int BORDERNOISE_ang_res = 16;
const int BORDERNOISE_grad_res = 8;
float BORDERNOISE_hash(vec2 p, float s) {
	return fract(35.1 * sin(dot(vec3(112.3, 459.2, 753.2), vec3(p, s))));
}
float BORDERNOISE_noise(vec2 p, float s) {
	vec2 d = vec2(0, 1)*sin(TIME);
	vec2 b = floor(p)*sin(TIME);
	vec2 f = fract(p);
	return mix(
		mix(BORDERNOISE_hash(b + d.xx, s), BORDERNOISE_hash(b + d.yx, s), f.x),
		mix(BORDERNOISE_hash(b + d.xy, s), BORDERNOISE_hash(b + d.yy, s), f.x), f.y);
}
float BORDERNOISE_getLineWidth(vec2 p, float s) {
	p /= BORDERNOISE_block_size;
	float w = 0.0;
	float intensity = 1.0;
	for (int i = 0; i < 3; i++) {
		w = mix(w, BORDERNOISE_noise(p, s), intensity);
		p /= 2.0;
		intensity /= 2.0;
	}
	
	return mix(BORDERNOISE_max_line_width, BORDERNOISE_min_line_width, w);
}
bool BORDERNOISE_pixelInRange(sampler2D text, vec2 uv, vec2 dist) {
	float alpha = 0.0;
	for (int i = 0; i < BORDERNOISE_ang_res; i++) {
		float angle = 2.0 * BORDERNOISE_pi * float(i) / float(BORDERNOISE_ang_res);
		vec2 disp = dist * vec2(cos(angle), sin(angle));
		if (texture(text, uv + disp).a > 0.0) return true;
	}
	return false;
}
float BORDERNOISE_getClosestDistance(sampler2D text, vec2 uv, vec2 maxDist) {
	if (!BORDERNOISE_pixelInRange(text, uv, maxDist)) return -1.0;
	
	float hi = 1.0; float lo = 0.0;
	
	for (int i = 1; i <= BORDERNOISE_grad_res; i++) {
		float curr = (hi + lo) / 2.0;
		if (BORDERNOISE_pixelInRange(text, uv, curr * maxDist)) {
			hi = curr;
		}
		else {
			lo = curr;
		}
	}
	return hi;
	
}
void borderNoise(in vec2 uv, in sampler2D txt, vec2 size, vec2 pixelSize, inout vec4 color){
	float timeStep = floor(BORDERNOISE_freq * TIME);
	vec2 scaledDist = pixelSize;
	scaledDist *= BORDERNOISE_getLineWidth(uv / pixelSize, timeStep);
	float w = BORDERNOISE_getClosestDistance(txt, uv, scaledDist);
	
	if (( w > 0.0) && (texture(txt, uv).a < 0.2)) {
		color = mix(BORDERNOISE_starting_colour, BORDERNOISE_ending_colour, tanh(3.0*w));
	}
}

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	vec2 size = vec2(textureSize(TEXTURE, 0));
	vec2 uv = UV;
	vec2 screen_uv = SCREEN_UV;

	if(COLORMANIPULATOR_active) colorManipulator(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);
	if(OUTLINE_active) outline(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);
	if(BORDERNOISE_active) borderNoise(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);


	color.a*=opacity;
	COLOR=color;
}

void vertex() {
	
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_1efjo"]
shader = SubResource("Shader_yykex")
shader_parameter/opacity = 1.0
shader_parameter/COLORMANIPULATOR_active = true
shader_parameter/COLORMANIPULATOR_brightness = -0.075
shader_parameter/COLORMANIPULATOR_contrast = 1.5
shader_parameter/COLORMANIPULATOR_saturation = 1.0
shader_parameter/COLORMANIPULATOR_redVal = 1.0
shader_parameter/COLORMANIPULATOR_greenVal = 1.0
shader_parameter/COLORMANIPULATOR_blueVal = 1.0
shader_parameter/COLORMANIPULATOR_tint_color = Color(1, 1, 1, 1)
shader_parameter/COLORMANIPULATOR_tint_effect_factor = 0.0
shader_parameter/OUTLINE_active = true
shader_parameter/OUTLINE_thickness = 2.0
shader_parameter/OUTLINE_color = Color(0, 0, 0, 1)
shader_parameter/BORDERNOISE_active = false
shader_parameter/BORDERNOISE_max_line_width = 0.0
shader_parameter/BORDERNOISE_min_line_width = 121.7
shader_parameter/BORDERNOISE_freq = 1.0
shader_parameter/BORDERNOISE_block_size = 21.4
shader_parameter/BORDERNOISE_starting_colour = Color(0, 0, 0, 1)
shader_parameter/BORDERNOISE_ending_colour = Color(1, 1, 0, 1)

[sub_resource type="SpriteFrames" id="SpriteFrames_wx02h"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_enonv")
}, {
"duration": 1.0,
"texture": ExtResource("2_kmcyd")
}, {
"duration": 1.0,
"texture": ExtResource("3_qkx5h")
}, {
"duration": 1.0,
"texture": ExtResource("4_kbj2x")
}, {
"duration": 1.0,
"texture": ExtResource("5_hl5g8")
}, {
"duration": 1.0,
"texture": ExtResource("6_tl00f")
}, {
"duration": 1.0,
"texture": ExtResource("7_u0ijc")
}, {
"duration": 1.0,
"texture": ExtResource("8_wgpaq")
}, {
"duration": 1.0,
"texture": ExtResource("9_uvnpc")
}, {
"duration": 1.0,
"texture": ExtResource("10_0xrp8")
}, {
"duration": 1.0,
"texture": ExtResource("11_koqkn")
}, {
"duration": 1.0,
"texture": ExtResource("12_fc4ay")
}, {
"duration": 1.0,
"texture": ExtResource("13_33alc")
}, {
"duration": 1.0,
"texture": ExtResource("14_3s6wb")
}, {
"duration": 1.0,
"texture": ExtResource("15_cf8t1")
}, {
"duration": 1.0,
"texture": ExtResource("16_uf108")
}, {
"duration": 1.0,
"texture": ExtResource("17_d3bwl")
}, {
"duration": 1.0,
"texture": ExtResource("18_6g7d2")
}, {
"duration": 1.0,
"texture": ExtResource("19_3owml")
}, {
"duration": 1.0,
"texture": ExtResource("20_xr8l6")
}, {
"duration": 1.0,
"texture": ExtResource("21_d44x7")
}, {
"duration": 1.0,
"texture": ExtResource("22_d1037")
}, {
"duration": 1.0,
"texture": ExtResource("23_bp5w5")
}, {
"duration": 1.0,
"texture": ExtResource("24_0amg0")
}, {
"duration": 1.0,
"texture": ExtResource("25_s63ur")
}, {
"duration": 1.0,
"texture": ExtResource("26_e3nvn")
}, {
"duration": 1.0,
"texture": ExtResource("27_ly8ed")
}, {
"duration": 1.0,
"texture": ExtResource("28_oc25x")
}, {
"duration": 1.0,
"texture": ExtResource("29_7lixp")
}],
"loop": false,
"name": &"attack_1",
"speed": 40.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_enonv")
}],
"loop": true,
"name": &"idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("30_xkqwr")
}],
"loop": false,
"name": &"lose",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("30_xkqwr")
}],
"loop": true,
"name": &"walk",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("31_70m5a")
}, {
"duration": 1.0,
"texture": ExtResource("32_vgq4r")
}, {
"duration": 1.0,
"texture": ExtResource("33_diafe")
}, {
"duration": 1.0,
"texture": ExtResource("34_m7vx6")
}, {
"duration": 1.0,
"texture": ExtResource("35_5fhbu")
}, {
"duration": 1.0,
"texture": ExtResource("36_olu6l")
}, {
"duration": 1.0,
"texture": ExtResource("37_fht2f")
}, {
"duration": 1.0,
"texture": ExtResource("38_ao2p0")
}, {
"duration": 1.0,
"texture": ExtResource("39_dxeal")
}, {
"duration": 1.0,
"texture": ExtResource("40_tjw2c")
}, {
"duration": 1.0,
"texture": ExtResource("41_mwfp6")
}, {
"duration": 1.0,
"texture": ExtResource("42_50khu")
}, {
"duration": 1.0,
"texture": ExtResource("43_kgfws")
}, {
"duration": 1.0,
"texture": ExtResource("44_jxfye")
}, {
"duration": 1.0,
"texture": ExtResource("45_k1urt")
}, {
"duration": 1.0,
"texture": ExtResource("46_7v2f0")
}, {
"duration": 1.0,
"texture": ExtResource("47_vn4a3")
}, {
"duration": 1.0,
"texture": ExtResource("48_nk4wx")
}, {
"duration": 1.0,
"texture": ExtResource("49_s70k8")
}],
"loop": false,
"name": &"win",
"speed": 20.0
}]

[sub_resource type="Shader" id="Shader_5fi0f"]
code = "//ATTENTION:
//  THIS IS SHADE AUTOGENERATED BY
//  THE ADDON SPRITE-SHADER-MIXER
//  ANY MANUAL CHANGES WILL BE REMOVED WHEN THE ADDON
//  UPDATES THIS SHADER.
//  ANYWAY, YOU CAN SAVE THE CURRENT VERSION AS A RESOURCE FILE.
//SHADERS:Pulse,
shader_type canvas_item;

uniform float opacity:hint_range(0.0, 1.0, 0.01)=1.;

	
uniform bool PULSE_active = true; //activation
uniform vec4 PULSE_shine_color : source_color = vec4(1.0); //Shine color
uniform float PULSE_alpha_limit : hint_range(0.0, 1.0, 0.1) = 0.0; //Alpha color limit to apply the shine, for example, if you won't to apply the shine to semi-transparent pixels
uniform float PULSE_cycle_speed : hint_range(0.0, 100.0, 0.1) = 1.0; //Pulse cycle speed
uniform bool PULSE_full_pulse_cycle = false; //[False = Do the effect and make a pause] [True = Do the effect continuosly]
void pulse(in vec2 uv, in sampler2D tex, in vec2 spriteSize, in vec2 pixelSize, inout vec4 color)
{
	//Check the pixel alpha value
	if (color.a >= PULSE_alpha_limit)
	{
		float cycle = sin(TIME * PULSE_cycle_speed);
		color.rgb = mix(color.rgb, PULSE_shine_color.rgb, (((cycle >= 0.0) || (PULSE_full_pulse_cycle)) ? abs(cycle) : 0.0) * PULSE_shine_color.a);
	}
}

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	vec2 size = vec2(textureSize(TEXTURE, 0));
	vec2 uv = UV;
	vec2 screen_uv = SCREEN_UV;

	if(PULSE_active) pulse(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);


	color.a*=opacity;
	COLOR=color;
}

void vertex() {
	
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_qfid0"]
shader = SubResource("Shader_5fi0f")
shader_parameter/opacity = 1.0
shader_parameter/PULSE_active = true
shader_parameter/PULSE_shine_color = Color(0, 0.647059, 1, 1)
shader_parameter/PULSE_alpha_limit = 0.0
shader_parameter/PULSE_cycle_speed = 22.0
shader_parameter/PULSE_full_pulse_cycle = true

[node name="GretchenEncounterSprite" type="AnimatedSprite2D"]
material = SubResource("ShaderMaterial_1efjo")
sprite_frames = SubResource("SpriteFrames_wx02h")
animation = &"win"
autoplay = "idle"
frame = 18
frame_progress = 1.0
script = ExtResource("1_qlg4w")
impact_frame_number = 10

[node name="FlashEffectSprite" type="Sprite2D" parent="."]
visible = false
material = SubResource("ShaderMaterial_qfid0")
position = Vector2(-3, -255)
scale = Vector2(1.342, 0.49)
texture = ExtResource("32_odapo")

[node name="RoundsWonLabel" type="Label" parent="."]
offset_left = -150.0
offset_top = -272.0
offset_right = 158.0
offset_bottom = -235.0
theme_override_colors/font_color = Color(1, 0, 0, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 3
theme_override_constants/shadow_offset_y = 3
theme_override_constants/outline_size = 2
theme_override_fonts/font = ExtResource("33_2s6ps")
theme_override_font_sizes/font_size = 30
text = "Rounds Won: N"
